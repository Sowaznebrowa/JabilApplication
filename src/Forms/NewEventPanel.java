/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Classes.FileManager;
import Classes.MailSender;
import Classes.PropertiesClass;
import Classes.SQLConnection;
import java.awt.event.ItemEvent;
import java.io.File;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import sun.applet.Main;

/**
 *
 * @author Przemys≈Çaw Tarkowski
 */
public class NewEventPanel extends javax.swing.JPanel {

    public static NewEventPanel newEventPanel;
    SQLConnection sqlConnector;
    String[] vendorNames,carierNames,buyerFirstNames,buyerLastNames;
    String userCarrier;
    File file;
    public NewEventPanel(String userCarrier) {
        initComponents();
        newEventPanel = this;
        sqlConnector = SQLConnection.sqlConnector;
        createEventButton.setEnabled(false);
        this.userCarrier = userCarrier;
        refreshItemList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        createEventButton = new javax.swing.JButton();
        loadFromFileButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();

        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel1.setText("Event Number (BL or AWB):");

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setText("PONumber:");

        jLabel3.setText("Vendor:");

        jLabel5.setText("Carrier:");

        createEventButton.setText("Create New Event");
        createEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEventButtonActionPerformed(evt);
            }
        });

        loadFromFileButton.setText("Load Data from File");
        loadFromFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFromFileButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("BACK");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        jLabel4.setText("Buyer:");

        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(createEventButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadFromFileButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2)
                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(loadFromFileButton)
                        .addGap(21, 21, 21)
                        .addComponent(cancelButton)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1)
                            .addComponent(jLabel1))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jComboBox1))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(282, 282, 282))))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void refreshItemList() {

        DefaultComboBoxModel carierModel = new DefaultComboBoxModel();
        DefaultComboBoxModel vendorModel = new DefaultComboBoxModel();
        DefaultComboBoxModel buyerModel = new DefaultComboBoxModel();
        String query = "SELECT DataName FROM "+PropertiesClass.props.DB_NAME+".Vendor WHERE DataActive ='1' ORDER BY DataName ASC ;";
        vendorNames = sqlConnector.getQueryFirstColumn(query);
        query = "SELECT DataName FROM "+PropertiesClass.props.DB_NAME+".Carrier WHERE DataActive ='1' ORDER BY DataName ASC ;";
        carierNames = sqlConnector.getQueryFirstColumn(query);
        query = "Select a.FirstName from "+PropertiesClass.props.DB_NAME+".User a, "+PropertiesClass.props.DB_NAME+".Group b where a.Group_ID=b.ID AND b.DataName='Buyer' ORDER BY a.Login ASC;";
        buyerFirstNames = sqlConnector.getQueryFirstColumn(query);
        query = "Select a.LastName from "+PropertiesClass.props.DB_NAME+".User a, "+PropertiesClass.props.DB_NAME+".Group b where a.Group_ID=b.ID AND b.DataName='Buyer' ORDER BY a.Login ASC;";
        buyerLastNames = sqlConnector.getQueryFirstColumn(query);
        for (int i = 0; i < vendorNames.length; i++) {
            vendorModel.addElement(vendorNames[i]);
        }
        jComboBox1.setModel(vendorModel);

        for (int i = 0; i < carierNames.length; i++) {
            carierModel.addElement(carierNames[i]);
        }
        jComboBox2.setModel(carierModel);
        for (int i = 0; i < buyerFirstNames.length; i++) {
            buyerModel.addElement(buyerFirstNames[i]+" "+buyerLastNames[i]);
        }
        jComboBox3.setModel(buyerModel);
        
        jComboBox1.setSelectedIndex(-1);
        jComboBox2.setSelectedIndex(-1);
        jComboBox3.setSelectedIndex(-1);
    }
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        newEventPanel.setVisible(false);
        MainPanel.mainPanel.setVisible(true);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void createEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEventButtonActionPerformed

        if(!(jTextField1.getText().isEmpty()||jTextField2.getText().isEmpty())){
        try{
        String query = "SELECT ID FROM "+PropertiesClass.props.DB_NAME+".Transports WHERE BLNumber='"+jTextField1.getText()+"';";
        if(sqlConnector.checkQueryAppearence(query)){
            throw new Exception("Event Number already Exists!");
        }    
         query = "SELECT ID FROM "+PropertiesClass.props.DB_NAME+".User WHERE FirstName='"+buyerFirstNames[jComboBox3.getSelectedIndex()]+"' AND LastName ='"+buyerLastNames[jComboBox3.getSelectedIndex()]+"';";
        int userID = Integer.parseInt(sqlConnector.getQueryFirstElement(query));
        query = "SELECT ID FROM "+PropertiesClass.props.DB_NAME+".Vendor WHERE DataName='"+jComboBox1.getSelectedItem().toString()+"';";
        int vendorID = Integer.parseInt(sqlConnector.getQueryFirstElement(query));
        query = "SELECT ID FROM "+PropertiesClass.props.DB_NAME+".Carrier WHERE DataName='"+jComboBox2.getSelectedItem().toString()+"';";
        int carrierID = Integer.parseInt(sqlConnector.getQueryFirstElement(query));
        query = "SELECT ID FROM "+PropertiesClass.props.DB_NAME+".Status WHERE DataName='Opened';";
        int statusID = Integer.parseInt(sqlConnector.getQueryFirstElement(query));
        query = "SELECT a.`E-mail` FROM "+PropertiesClass.props.DB_NAME+".User a WHERE Login='"+MainPanel.mainPanel.userLogin+"';";
        String updatedBy = sqlConnector.getQueryFirstElement(query);
        sqlConnector.addEventToTable(jTextField1.getText(),jTextField2.getText(), updatedBy, userID, vendorID, carrierID, statusID);
        sendMails(userID);
        newEventPanel.setVisible(false);
        DocumentsPanel dPanel = new DocumentsPanel(jTextField1.getText(), MainPanel.mainPanel.userGroup, MainPanel.mainPanel.mainPanel);
         Classes.CDSApplet.cdsApplet.add(dPanel);
        MainPanel.mainPanel.refreshItemList();
        }catch(Exception e){
        JOptionPane.showMessageDialog(newEventPanel, e.getMessage());
        }
       }else JOptionPane.showMessageDialog(newEventPanel, "Some fields are empty! All fields must be filled to create transport event.");
    }//GEN-LAST:event_createEventButtonActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {          
            checkCombo();       
        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            checkCombo();
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void loadFromFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFromFileButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = chooser.getSelectedFile(); // path to file
            //String fileName = file.getName();
            FileManager fm = new FileManager();
            fm.csvReader(file);
            JOptionPane.showMessageDialog(newEventPanel, "Data Loaded. Check \"*_report.csv\" file in loaded directory for more details.");
            MainPanel.mainPanel.refreshItemList();
        }
    }//GEN-LAST:event_loadFromFileButtonActionPerformed

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            checkCombo();
        }
    }//GEN-LAST:event_jComboBox3ItemStateChanged
    private void checkCombo(){
        
            int selectedIndex1 = jComboBox1.getSelectedIndex();
            int selectedIndex2 = jComboBox2.getSelectedIndex();
            int selectedIndex3 = jComboBox3.getSelectedIndex();
            if (selectedIndex1 == -1 || selectedIndex2 == -1 || selectedIndex3 == -1) {
                //No selection, disable fire button.
                createEventButton.setEnabled(false);
            } else {
                //Selection, enable the fire button.
                createEventButton.setEnabled(true);
            }
        }            
    
    private void sendMails(int buyerID){
        
        String query = "SELECT `E-mail` FROM "+PropertiesClass.props.DB_NAME+".User WHERE ID="+buyerID+";";
        String buyerMail = sqlConnector.getQueryFirstElement(query);
        query = "SELECT `E-mail` FROM "+PropertiesClass.props.DB_NAME+".User WHERE Login='"+MainPanel.userLogin+"';"; 
        String creatorMail = sqlConnector.getQueryFirstElement(query);
        query = "SELECT `E-mail` FROM "+PropertiesClass.props.DB_NAME+".Vendor WHERE DataName='"+jComboBox1.getSelectedItem().toString()+"';";
        String vendorMail = sqlConnector.getQueryFirstElement(query);
        String [] mails;
        //ver.1.01 Creator deleted from a mail list even when he chooses himself as buyer or vendor -- 28.08.2014
        if (!buyerMail.contentEquals(creatorMail))
        {
            if (!vendorMail.contentEquals(creatorMail))
            {
               mails = new String [] {buyerMail, vendorMail};
            }else mails = new String [] {buyerMail};
             
        }else
        { 
            if (!vendorMail.contentEquals(creatorMail))
            {
               mails = new String [] {vendorMail};
            }else mails = new String [] {};
        }
        MailSender mail= new MailSender();
         try{
            //ver.1.02 Add Carrier to the mail title for Courier user group -- 30.11.2014
            if(userCarrier!=null){
                mail.send(mails,"New Event Created by '"+userCarrier+"': "+jTextField1.getText()+", Opened, ","New event has been created:\nBLNumber: "+jTextField1.getText()+"\nPONumber: "+jTextField2.getText()+"\nCarrier: "+jComboBox2.getSelectedItem().toString()+"\nVendor: "+jComboBox1.getSelectedItem().toString()+"\nBuyer: "+jComboBox3.getSelectedItem().toString());               
            }else
            //ver.1.01 Event Number and status added to the mail title -- 28.08.2014 
            mail.send(mails,"New Event Created: "+jTextField1.getText()+", Opened","New event has been created:\nBLNumber: "+jTextField1.getText()+"\nPONumber: "+jTextField2.getText()+"\nCarrier: "+jComboBox2.getSelectedItem().toString()+"\nVendor: "+jComboBox1.getSelectedItem().toString()+"\nBuyer: "+jComboBox3.getSelectedItem().toString());
            }catch(Exception e){System.out.println("B≈ÇƒÖd w mailu: "+e);}
    
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton createEventButton;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton loadFromFileButton;
    // End of variables declaration//GEN-END:variables
}
