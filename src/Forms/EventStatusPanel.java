/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Classes.MailSender;
import Classes.PropertiesClass;
import Classes.SQLConnection;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Sowa
 */

//ver.1.01 Event Number and status added to the mail title -- 28.08.2014

public class EventStatusPanel extends javax.swing.JPanel {

    public static EventStatusPanel statusPanel;
    private String selectedEvent;
    private String userGroup;   //added after 1.01 to check statuses available for different users
    private String userCarrier;   //added after 1.02 to check Carrier name of the Courier user
    private int selectedEventID;
    SQLConnection sqlConnector;
    JPanel parentPanel;
    
    
    public EventStatusPanel(String event, JPanel parentPanel, String userGroup, String userCarrier) {
        initComponents();
        statusPanel = this;
        this.parentPanel=parentPanel;
        sqlConnector = SQLConnection.sqlConnector;
        this.userGroup = userGroup;
        this.userCarrier = userCarrier;
        selectedEvent = event;
        jTextField1.setText(event);
        checkEventStatus();
        String query = "SELECT ID FROM "+PropertiesClass.props.DB_NAME+".Transports WHERE BLNumber='"+selectedEvent+"'";
        selectedEventID = Integer.parseInt(sqlConnector.getQueryFirstElement(query));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   // @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        changeStatusButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();

        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));

        jLabel1.setText("Event:");

        jTextField1.setEditable(false);

        jLabel2.setText("Change Status:");

        jLabel3.setText("From:");

        jLabel4.setText("To:");

        jTextField2.setEditable(false);

        changeStatusButton.setText("Change Status");
        changeStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeStatusButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("BACK");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(changeStatusButton, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(45, 45, 45)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField2)
                                .addComponent(jComboBox1, 0, 304, Short.MAX_VALUE)))))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(changeStatusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton)))
                .addContainerGap(341, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void checkEventStatus(){
        String query = "SELECT DataName FROM "+PropertiesClass.props.DB_NAME+".Status a, "+PropertiesClass.props.DB_NAME+".Transports b WHERE b.BLNumber = '"+selectedEvent+"' AND b.Status_ID = a.ID;";
        String statusName = sqlConnector.getQueryFirstElement(query);
         query = "SELECT DataValue FROM "+PropertiesClass.props.DB_NAME+".Status a, "+PropertiesClass.props.DB_NAME+".Transports b WHERE b.BLNumber = '"+selectedEvent+"' AND b.Status_ID = a.ID;";
        int statusValue = Integer.parseInt(sqlConnector.getQueryFirstElement(query));
        jTextField2.setText(statusName);
        DefaultComboBoxModel comboModel = new DefaultComboBoxModel();
        //Created=0
        //Opened=1
        //Completed=2
        //Rejected=3
        //Archived=4
        //Correct=5
        //AC=6
        //Reopened=7
        //Notified=8
        switch(statusValue){
            //Created
            case 0: comboModel.addElement("Opened");break;
            //Opened
            case 1 : { 
                if(!userGroup.contentEquals("Courier")&&!userGroup.contentEquals("Vendor"))comboModel.addElement("Completed");
                if(userGroup.contentEquals("Courier"))comboModel.addElement("Notified");
                //comboModel.addElement("Correct");
            }break;
            //Completed    
            case 2 : {
                //comboModel.addElement("Correct");
                if(!userGroup.contentEquals("Buyer")&&!userGroup.contentEquals("Courier"))comboModel.addElement("Rejected"); //ver.1.01  Buyer cannot change Completed status. added from 21-09-2014
                if(!userGroup.contentEquals("Buyer")&&!userGroup.contentEquals("Courier"))comboModel.addElement("AC");       //ver.1.01  Buyer cannot change Completed status. added from 21-09-2014
            }break;
            //Rejected
            case 3 : {
                if(!userGroup.contentEquals("Customs Agency"))comboModel.addElement("Correct"); //ver.1.01  CA cannot change Rejected status. Buyer cannot change Rejected status to Reopened. added from 21-09-2014
                if(!(userGroup.contentEquals("Buyer")||userGroup.contentEquals("Customs Agency")))comboModel.addElement("Reopened"); //ver.1.01  CA cannot change Rejected status. Buyer cannot change Rejected status to Reopened. added from 21-09-2014
            }break;
            //Archived
            case 4 : ;break;
            //Correct    
            case 5 :{
                //if(!userGroup.contentEquals("Buyer")) comboModel.addElement("Archived");
                if(!userGroup.contentEquals("Buyer"))comboModel.addElement("Rejected"); //ver.1.01  Buyer cannot change Correct status. added from 21-09-2014
                if(!userGroup.contentEquals("Buyer"))comboModel.addElement("AC"); //ver.1.01  Buyer cannot change Correct status. added from 21-09-2014
            }break;
            //AC    
            case 6 :
                if(!userGroup.contentEquals("Buyer")) comboModel.addElement("Archived"); 
                break;
            //Reopened    
            case 7 : {
                if(!userGroup.contentEquals("Customs Agency"))comboModel.addElement("Correct"); //ver.1.01  CA cannot change Reopened status. added from 21-09-2014
            }break;
            //Notified 
            case 8 : {
                if(userGroup.contentEquals("Buyer"))comboModel.addElement("Completed"); 
            }break;
        }
        jComboBox1.setModel(comboModel);
        
    }
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        statusPanel.setVisible(false);
        parentPanel.setVisible(true);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void changeStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeStatusButtonActionPerformed
        if(!jComboBox1.getSelectedItem().toString().isEmpty()){
            String query = "SELECT ID FROM "+PropertiesClass.props.DB_NAME+".Status a WHERE a.DataName = '"+jComboBox1.getSelectedItem().toString()+"' ;";
        int statusID = Integer.parseInt(sqlConnector.getQueryFirstElement(query));
            sqlConnector.updateEventStatus(statusID, selectedEvent);
            sqlConnector.addLogToTable("Status changed to: "+jComboBox1.getSelectedItem().toString(), MainPanel.userLogin, "", selectedEventID);
            JOptionPane.showMessageDialog(statusPanel, "Event Status Changed.");
            //REJECTED
            if(jComboBox1.getSelectedItem().toString().contentEquals("Rejected")){
                sendMailsToImpex("Rejected");
                //sendMailsToBuyer("Rejected");  //ver.1.01   changed from 28-08-2014
                if(userGroup.contentEquals("Impex")) sendMailsToBuyer("Rejected"); //ver.1.01   changed from 19-10-2014
            }
            //OPENED
            if(jComboBox1.getSelectedItem().toString().contentEquals("Opened")){
                sendMailsToBuyer("Opened");
                if(userGroup.contentEquals("Courier")) sendMailsToImpex("Opened");
            }
            //CORRECT
            if(jComboBox1.getSelectedItem().toString().contentEquals("Correct")){
                sendMailsToImpex("Correct");
                sendMailsToCustomsAgency("Correct");
                sendMailsToBuyer("Correct");
            }
            //COMPLETED
            if(jComboBox1.getSelectedItem().toString().contentEquals("Completed")){
                sendMailsToCustomsAgency("Completed");
            }
            //REOPENED
            //ver.1.01   new status added from 21-09-2014
            if(jComboBox1.getSelectedItem().toString().contentEquals("Reopened")){                
               if(userGroup.contentEquals("Impex")) sendMailsToBuyer("Reopened");//ver.1.01   changed from 19-10-2014
            }
            //NOTIFIED         
            //ver.1.02   new status (Notified) added from 30-11-2014
            if(jComboBox1.getSelectedItem().toString().contentEquals("Notified")){
                if(userGroup.contentEquals("Courier")) sendMailsToImpex("Notified");
                if(userGroup.contentEquals("Courier")) sendMailsToBuyer("Notified");
            }
            //AC         
            //ver.1.02   new mail notifications for AC status added from 30-11-2014
            if(jComboBox1.getSelectedItem().toString().contentEquals("AC")){
                sendMailsToCourier("AC");
                sendMailsToTransport("AC");
            }
            statusPanel.setVisible(false);
            parentPanel.setVisible(true);
        }else JOptionPane.showMessageDialog(statusPanel, "You can't change the status of this event!");
    }//GEN-LAST:event_changeStatusButtonActionPerformed
    private void sendMailsToImpex(String status){
               
        String query = "SELECT a.`E-mail` FROM "+PropertiesClass.props.DB_NAME+".User a, "+PropertiesClass.props.DB_NAME+".Group b WHERE a.Group_ID=b.ID AND b.DataName='Impex';";
        String [] ImpexMails = sqlConnector.getQueryFirstColumn(query);
        MailSender mail= new MailSender();
         try{
            //ver.1.02 Add Carrier to the mail title for Courier user group -- 30.11.2014 
            if(userCarrier!=null){
                mail.send(ImpexMails,"Event status changed by '"+userCarrier+"': "+selectedEvent+", "+status+".","Event status has been changed to "+status+":\nBLNumber: "+selectedEvent+".");               
            }else
            mail.send(ImpexMails,"Event status changed: "+selectedEvent+", "+status+".","Event status has been changed to "+status+":\nBLNumber: "+selectedEvent+".");
         }catch(Exception e){System.out.println("Błąd w mailu: "+e);}
    
    }
    private void sendMailsToCustomsAgency(String status){
               
        String query = "SELECT a.`E-mail` FROM "+PropertiesClass.props.DB_NAME+".User a, "+PropertiesClass.props.DB_NAME+".Group b WHERE a.Group_ID=b.ID AND b.DataName='Customs Agency';";
        String [] CAMails = sqlConnector.getQueryFirstColumn(query);
        MailSender mail= new MailSender();
         try{            
            mail.send(CAMails,"Event status changed: "+selectedEvent+", "+status+".","Event status has been changed to "+status+":\nBLNumber: "+selectedEvent+".");
         }catch(Exception e){System.out.println("Błąd w mailu: "+e);}
    
    }
    private void sendMailsToBuyer(String status){
               
        String query = "SELECT a.`E-mail` FROM "+PropertiesClass.props.DB_NAME+".User a, "+PropertiesClass.props.DB_NAME+".Transports b WHERE b.Buyer_ID=a.ID AND b.ID="+selectedEventID+";";
        String [] BuyerMails = sqlConnector.getQueryFirstColumn(query);
        MailSender mail= new MailSender();
         try{
            //ver.1.02 Add Carrier to the mail title for Courier user group -- 30.11.2014 
            if(userCarrier!=null){
                mail.send(BuyerMails,"Event status changed by '"+userCarrier+"': "+selectedEvent+", "+status+".","Event status has been changed to "+status+":\nBLNumber: "+selectedEvent+".");               
            }else
            mail.send(BuyerMails,"Event status changed: "+selectedEvent+", "+status+".","Event status has been changed to "+status+":\nBLNumber: "+selectedEvent+".");
         }catch(Exception e){System.out.println("Błąd w mailu: "+e);}
    
    }
        private void sendMailsToCourier(String status){
               
        String query = "SELECT u.`E-mail` FROM "+PropertiesClass.props.DB_NAME+".User u, "+PropertiesClass.props.DB_NAME+".Group g, "+PropertiesClass.props.DB_NAME+".Transports t WHERE u.Group_ID=g.ID AND g.DataName='Courier' AND u.Carrier_ID=t.Carrier_ID AND t.ID="+selectedEventID+" ;";
        String [] CourierMails;
        try{
            if(sqlConnector.checkQueryAppearence(query)) CourierMails = sqlConnector.getQueryFirstColumn(query);
            else throw new Exception("No Courier with Carrier_ID equal transport Carrier_ID");
            MailSender mail= new MailSender();
                   
            mail.send(CourierMails,"Event status changed: "+selectedEvent+", "+status+".","Event status has been changed to "+status+":\nBLNumber: "+selectedEvent+".");
         }catch(Exception e){System.out.println("Błąd w mailu: "+e);}
    
    }
        private void sendMailsToTransport(String status){
               
        String query = "SELECT u.`E-mail` FROM "+PropertiesClass.props.DB_NAME+".User u, "+PropertiesClass.props.DB_NAME+".Group g WHERE u.Group_ID=g.ID AND g.DataName='Transport';"; 
        String [] TransportMails;
        try{
            if(sqlConnector.checkQueryAppearence(query)) TransportMails = sqlConnector.getQueryFirstColumn(query);
            else throw new Exception("No Transport User in database");
            MailSender mail= new MailSender();
                   
            mail.send(TransportMails,"Event status changed: "+selectedEvent+", "+status+".","Event status has been changed to "+status+":\nBLNumber: "+selectedEvent+".");
         }catch(Exception e){System.out.println("Błąd w mailu: "+e);}
    
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton changeStatusButton;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
